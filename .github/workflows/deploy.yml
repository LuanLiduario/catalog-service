name: Deploy AWS - Product Catalog Service

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER_NAME: product-catalog-cluster
  ECR_REPO_NAME: product-catalog-repo
  IMAGE_TAG: latest

jobs:
  deploy:
    name: Deploy para AWS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Executar Terraform Plan
        run: |
          cd terraform
          terraform plan

      - name: Criar repositório ECR com Terraform
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve -input=false -debug || terraform import aws_ecr_repository.product_catalog_repository $ECR_REPO_NAME


      - name: Instalar Docker
        run: |
          curl -fsSL https://get.docker.com | sudo bash
          sudo usermod -aG docker $USER

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Obter URL do repositório ECR
        id: ecr
        run: |
          URL=$(aws ecr describe-repositories --repository-names $ECR_REPO_NAME --region $AWS_REGION --query 'repositories[0].repositoryUri' --output text)
          echo "REPO_URL=$URL" >> $GITHUB_ENV

      - name: Login no ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $REPO_URL

      - name: Build e Push da imagem Docker
        run: |
          docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
          docker tag $ECR_REPO_NAME:$IMAGE_TAG $REPO_URL:$IMAGE_TAG
          docker push $REPO_URL:$IMAGE_TAG

      - name: Criar ECS Fargate Task com Terraform
        run: |
          cd terraform
          terraform apply -auto-approve -var="ecr_url=${{ env.REPO_URL }}:${{ env.IMAGE_TAG }}" -var="cluster_name=$ECS_CLUSTER_NAME"

      - name: Atualizar ECS Service
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service product-catalog-service --force-new-deployment --region $AWS_REGION

      - name: Monitorar aplicação
        run: |
          aws ecs describe-services --cluster $ECS_CLUSTER_NAME --services product-catalog-service --region $AWS_REGION
